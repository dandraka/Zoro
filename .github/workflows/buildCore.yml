name: Build and test .Net Core app

on:
  push:
    branches: [ master ]
    paths-ignore:
    - "README.md"
    - "LICENSE"
    - ".gitattributes"
    - ".gitignore"
    - ".github/**"
    - ".vscode/**"
  pull_request:
    branches: [ master ]
    paths-ignore:
    - "README.md"
    - "LICENSE"
    - ".gitattributes"
    - ".gitignore"
    - ".github/**"
    - ".vscode/**"    

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
        
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: "3.7"        

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal
      env:
        TESTSECRET: ${{secrets.TESTSECRET}}        
        SQLCONNSTRING: ${{secrets.SQLCONNSTRING}} 
        
    - name: Fetch action
      id: pl
      uses: Rishabh510/Path-lister-action@master
      with:
        path: "/home/runner/work/Zoro/"
        type: ".csproj"

    - name: Output results
      run: |
        echo "Found ${{ steps.pl.outputs.path_count }} file(s) with this extension:"
        for i in ${{ steps.pl.outputs.paths }}; do
        echo $i
        done     
        
    - name: List Files
      run: |
        directory = r'/home/runner/work/Zoro/'
        for entry in os.scandir(directory):
          print(entry.path)
          done

    - name: Publish on version change
      id: publish_nuget
      uses: rohith/publish-nuget@v2.5.5
      with:
        # Filepath of the project to be packaged, relative to root of repository
        PROJECT_FILE_PATH: Zoro.Processor/Zoro.Processor.csproj
        
        # NuGet package id, used for version detection & defaults to project name
        # PACKAGE_NAME: Core
        
        # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
        # VERSION_FILE_PATH: Directory.Build.props

        # Regex pattern to extract version info in a capturing group
        # VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$
        
        # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
        # VERSION_STATIC: 1.0.0

        # Flag to toggle git tagging, enabled by default
        # TAG_COMMIT: true

        # Format of the git tag, [*] gets replaced with actual version
        # TAG_FORMAT: v*

        # API key to authenticate with NuGet server
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}

        # NuGet server uri hosting the packages, defaults to https://api.nuget.org
        # NUGET_SOURCE: https://api.nuget.org

        # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
        INCLUDE_SYMBOLS: true        
